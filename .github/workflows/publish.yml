name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        include:
          - rust: stable
            can_fail: false
          - rust: beta
            can_fail: true
          - rust: nightly
            can_fail: true
    continue-on-error: ${{ matrix.can_fail }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          
      - name: Cache Cargo registry and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
            ${{ runner.os }}-cargo-
            
      - name: Check formatting
        run: cargo fmt --all -- --check
        
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        
      - name: Build library
        run: cargo build --verbose --all-features
        
      - name: Run unit tests
        run: cargo test --verbose --all-features
        
      - name: Run integration tests
        run: cargo test --verbose --test integration_tests
        
      - name: Test function name features
        run: |
          cargo test --verbose --features function-names-snake
          cargo test --verbose --features function-names-camel
          cargo test --verbose --features function-names-pascal
          cargo test --verbose --features function-names-screaming
          cargo test --verbose --features function-names-kebab
          
      - name: Build examples
        run: |
          cargo build --example params
          cargo build --example custom
          cargo build --example fields
          cargo build --example span
          cargo build --example full
          
      - name: Run examples
        run: |
          cargo run --example params
          cargo run --example custom
          cargo run --example fields
          cargo run --example span
          cargo run --example full
          
      - name: Test documentation
        run: cargo doc --all-features --no-deps
        
      - name: Verify package builds
        run: cargo package --verbose

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        
      - name: Install cargo-audit
        run: cargo install cargo-audit
        
      - name: Run security audit
        run: cargo audit

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          
      - name: Cache Cargo registry and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-publish-
            ${{ runner.os }}-cargo-
            
      - name: Verify package builds correctly
        run: cargo package --verbose
        
      - name: Run final tests
        run: cargo test --verbose --all-features
        
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --verbose
